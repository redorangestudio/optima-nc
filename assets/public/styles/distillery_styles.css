/***

Distillery Styles (distillery_styles.scss)

This file represents the primary stylesheet generated
and utilized by the theme. It is namespaced to avoid
any potential enqueuing conflicts.

No actual styles should be entered directly to this file.
All theme styles should be organized and included in this
file using @import.

***/
/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

/***

Sass Variables

Enter all variables used across stylesheets here.
These could include fonts, colors, measurements, etc.

***/
/***

Sass Mixins

Feel free to use whatever custom mixins you choose.
But comment about the context of each mixin and keep
them here to stay organized!

***/
/***

Global Styles

Global styles are designed to handle some overarching settings
such as viewport settings and box sizing.

Styles added to this file should be limited to styles applied
globally to base level elements.

***/
@-webkit-viewport {
  width: device-width; }

@-mos-viewport {
  width: device-width; }

@-ms-viewport {
  width: device-width; }

@viewport {
  width: device-width; }

*, *:before, *:after {
  box-sizing: border-box; }

html {
  overflow-x: hidden; }

.mobile-nav-open {
  overflow: hidden; }

a {
  text-decoration: none; }

.align-left {
  text-align: left; }

.align-center {
  text-align: center; }

.align-right {
  text-align: right; }

.back-to-top {
  position: fixed;
  bottom: -10%;
  right: 3%;
  z-index: 99;
  color: #a8a3a0;
  transition: all 275ms; }
  .back-to-top:before {
    content: '';
    width: 15px;
    height: 15px;
    position: absolute;
    top: -10px;
    left: 50%;
    transform: rotate(45deg) translateX(-50%);
    border-width: 2px 0px 0px 2px;
    border-color: #a8a3a0;
    border-style: solid; }
  .scrolled .back-to-top {
    bottom: 3%; }

/***

Typography

***/
*, *:before, *:after {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

h1, h2, h3, h4, h5, h6 {
  margin: 0 0 20px;
  width: 100%;
  display: block;
  font-family: "Open Sans Condensed", sans-serif; }
  h1.is-gray, h2.is-gray, h3.is-gray, h4.is-gray, h5.is-gray, h6.is-gray {
    color: #6b6662; }
  h1.is-light-gray, h2.is-light-gray, h3.is-light-gray, h4.is-light-gray, h5.is-light-gray, h6.is-light-gray {
    color: #a8a3a0; }
  h1.is-medium-gray, h2.is-medium-gray, h3.is-medium-gray, h4.is-medium-gray, h5.is-medium-gray, h6.is-medium-gray {
    color: #53504e; }
  h1.is-red, h2.is-red, h3.is-red, h4.is-red, h5.is-red, h6.is-red {
    color: #ee5764; }
  h1.is-purple, h2.is-purple, h3.is-purple, h4.is-purple, h5.is-purple, h6.is-purple {
    color: #421370; }
  h1.is-teal, h2.is-teal, h3.is-teal, h4.is-teal, h5.is-teal, h6.is-teal {
    color: #14908f; }
  h1.is-light-teal, h2.is-light-teal, h3.is-light-teal, h4.is-light-teal, h5.is-light-teal, h6.is-light-teal {
    color: #e1f3f6; }
  h1.is-medium-teal, h2.is-medium-teal, h3.is-medium-teal, h4.is-medium-teal, h5.is-medium-teal, h6.is-medium-teal {
    color: #8fd4dd; }
  h1.is-ghost, h2.is-ghost, h3.is-ghost, h4.is-ghost, h5.is-ghost, h6.is-ghost {
    color: #fff; }

h1 {
  font-size: 50px;
  font-weight: 600;
  line-height: 1.1;
  color: #53504e;
  font-family: "Open Sans Condensed", sans-serif; }

h2 {
  font-size: 52px;
  color: #000000;
  line-height: 1.2em; }

h3 {
  font-size: 28px;
  font-weight: 700;
  text-transform: capitalize;
  font-family: "Open Sans", sans-serif; }

h4 {
  font-size: 16px;
  font-weight: 700;
  font-family: "Open Sans", sans-serif; }

p {
  font-size: 15px;
  line-height: 1.5;
  font-family: "Open Sans", sans-serif;
  color: #53504e; }
  @media (min-width: 959px) {
    p {
      font-size: 18px; } }

strong {
  font-family: "Open Sans", sans-serif; }

html, body {
  font-family: "Open Sans", sans-serif;
  font-style: normal; }

span.highlight {
  font-weight: 700; }
  span.highlight--purple {
    color: #421370; }
  span.highlight--teal {
    color: #14908f; }
  span.highlight--gray {
    color: #53504e; }

.focus {
  font-size: 20px; }
  @media (min-width: 959px) {
    .focus {
      font-size: 28px; } }
  .focus.red {
    color: #ee5764; }

a.oh-link {
  color: #ee5764;
  transition: all 275ms;
  text-decoration: underline; }
  a.oh-link:hover {
    color: #503287; }

/***

Layout

***/
.section {
  width: 100%;
  padding: 75px 3%;
  position: relative; }
  @media (min-width: 959px) {
    .section {
      padding: 75px 5%; } }

.section__header {
  text-align: center;
  display: block;
  max-width: 1300px;
  margin: 0 auto 20px; }
  .section__header--left {
    text-align: left; }

.section__title {
  color: #14908f;
  text-transform: uppercase;
  display: inline;
  position: relative;
  padding-bottom: 25px; }
  .section__title span {
    position: relative; }
  .section__title:after {
    content: '';
    position: absolute;
    left: -15%;
    bottom: 10px;
    width: 130%;
    border-bottom: 1px solid #a8a3a0; }

.section__headline {
  margin-top: 25px;
  color: #421370; }
  @media (max-width: 959px) {
    .section__headline {
      font-size: 34px; } }

.section__subheadline {
  font-size: 18px;
  color: #53504e;
  margin-bottom: 20px;
  max-width: 80%;
  margin: 40px auto; }
  @media (min-width: 959px) {
    .section__subheadline {
      font-size: 22px; } }

.section-row-divider {
  margin: 20px auto;
  display: block;
  max-width: 1300px; }

.half {
  width: 50%; }

.oh-list li {
  margin-bottom: 8px;
  color: #53504e;
  font-size: 15px; }
  @media (min-width: 959px) {
    .oh-list li {
      font-size: 18px; } }

.header {
  border-top: 40px solid #421370;
  padding-top: 22px; }

.header__logo {
  display: block;
  width: 265px;
  height: 80px;
  margin: 0 auto; }

.header__title {
  text-align: center;
  position: relative;
  display: block;
  margin-bottom: 20px; }
  .header__title:before {
    content: ''; }
    @media (min-width: 767px) {
      .header__title:before {
        position: absolute;
        height: 1px;
        width: 100%;
        display: block;
        top: 50%;
        transform: translateY(-50%);
        background: #6b6662; } }
  .header__title h1 {
    background-color: #fff;
    padding: 0 15px;
    z-index: 1;
    position: relative;
    display: inline;
    font-weight: normal;
    line-height: 1.3;
    font-size: 30px; }
    @media (min-width: 959px) {
      .header__title h1 {
        font-size: 40px; } }
    @media (min-width: 1200px) {
      .header__title h1 {
        font-size: 50px; } }

.header__menu-wrapper {
  width: 100%;
  display: block;
  position: relative; }

.header__menu {
  margin: 0 auto;
  padding: 0;
  text-align: center;
  position: relative;
  transition: all 275ms;
  position: absolute;
  background: #6b6662;
  opacity: 0;
  visibility: hidden;
  z-index: 9; }
  @media (max-width: 959px) {
    .header__menu {
      height: 0;
      transform: translateY(-20%);
      width: 100%; }
      .header__menu--active {
        transform: translateY(0%);
        opacity: 1;
        visibility: visible;
        height: 100%; } }
  @media (min-width: 959px) {
    .header__menu {
      display: block;
      position: relative;
      opacity: 1;
      visibility: visible;
      background: #a8a3a0; } }
  .header__menu li {
    display: block;
    background: #6b6662; }
    @media (max-width: 959px) {
      .header__menu li:first-child {
        padding-top: 15px; }
      .header__menu li:last-child {
        padding-bottom: 15px; } }
    @media (min-width: 959px) {
      .header__menu li {
        display: inline-block; } }

.header__menu-link {
  color: #ffffff;
  font-weight: bold;
  font-size: 15px;
  text-transform: uppercase;
  display: block;
  transition: all 275ms;
  padding: 20px 5px; }
  @media (min-width: 959px) {
    .header__menu-link {
      padding: 20px 10px;
      background: #a8a3a0; } }
  @media (min-width: 1076px) {
    .header__menu-link {
      padding: 20px 15px; } }
  @media (min-width: 1149px) {
    .header__menu-link {
      padding: 20px; } }
  .header__menu-link:hover {
    background: #6b6662;
    color: #ffd067; }

.header__menu-trigger {
  display: block;
  cursor: pointer;
  background: #a8a3a0;
  padding: 20px;
  text-transform: uppercase;
  font-weight: bold;
  color: #ffffff;
  text-align: center;
  font-size: 15px;
  z-index: 5;
  position: relative; }
  @media (min-width: 959px) {
    .header__menu-trigger {
      display: none; } }

.footer {
  background: #503287;
  color: #ffffff;
  padding: 40px 3% 150px;
  text-align: center;
  font-size: 14px;
  position: relative;
  z-index: 1; }

.footer__inner {
  max-width: 1300px;
  margin: 0 auto; }

#medicaid-in-nc {
  background: #e1f3f6;
  background-image: url("../images/icon-nc.svg");
  background-size: 80%;
  background-repeat: no-repeat;
  background-position: center; }

#how-we-work {
  background: #8fd4dd; }
  #how-we-work .section__title {
    color: #ffffff; }
  #how-we-work .col-wrap {
    margin-top: 40px; }
  #how-we-work .col-image-wrapper {
    height: 125px; }
    #how-we-work .col-image-wrapper .col-image {
      margin: 0; }

#our-results h3 {
  margin-top: 30px;
  color: #ee5764;
  text-align: center; }
  @media (max-width: 959px) {
    #our-results h3 {
      font-size: 28px; } }

#partner-with-optima {
  background: #8fd4dd; }

.provider-network {
  margin: 60px auto 120px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex: 1 1 auto;
      flex: 1 1 auto;
  -ms-flex-align: start;
      align-items: flex-start;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  max-width: 1300px; }
  @media (min-width: 959px) {
    .provider-network {
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
      margin: 60px auto 0; } }

.provider-network__left {
  width: 100%; }
  @media (min-width: 959px) {
    .provider-network__left {
      width: 48%; } }

.provider-network__right {
  display: block;
  width: 100%;
  position: relative; }
  @media (min-width: 959px) {
    .provider-network__right {
      width: 48%;
      display: block; } }

.provider-network__bar {
  background: #ee5764;
  color: #ffffff;
  font-weight: 700;
  padding: 22px 5%;
  margin: 0px 0 40px; }
  @media (min-width: 959px) {
    .provider-network__bar {
      padding: 22px 9%; } }

.provider-network__row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  margin-bottom: 40px; }
  .provider-network__row:last-child {
    margin-bottom: 0; }

.provider-network__image {
  width: 15%; }

.provider-network__text {
  width: 80%;
  line-height: 1.5;
  color: #53504e;
  font-size: 15px; }
  @media (min-width: 959px) {
    .provider-network__text {
      font-size: 18px; } }

.provider-network__graphic {
  width: 100%;
  background-size: contain;
  background-position: top;
  display: block;
  background-repeat: no-repeat;
  position: absolute; }
  .provider-network__graphic--stethoscope {
    background-image: url("../images/stethoscope-large.svg");
    height: 285px;
    top: 20px;
    z-index: 1; }
    @media (min-width: 959px) {
      .provider-network__graphic--stethoscope {
        height: 655px;
        top: -40px; } }
  .provider-network__graphic--papers {
    background-image: url("../images/bottom-large.svg");
    height: 285px; }
    @media (min-width: 959px) {
      .provider-network__graphic--papers {
        height: 721px;
        right: -30%;
        width: 780px; } }
    @media (min-width: 1200px) {
      .provider-network__graphic--papers {
        right: -3%; } }

.provider-network--paper .provider-network__right {
  position: absolute;
  right: 0;
  height: 285px;
  bottom: -10%; }
  @media (min-width: 959px) {
    .provider-network--paper .provider-network__right {
      bottom: 0;
      height: 721px; } }

#participate {
  background: #e1f3f6; }

.col-wrap {
  max-width: 1300px;
  margin: 0 auto;
  display: -ms-flexbox;
  display: flex;
  -ms-flex: 1 1 auto;
      flex: 1 1 auto;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 0 3%; }
  @media (min-width: 959px) {
    .col-wrap {
      padding: 0;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap; } }

.col {
  padding: 0;
  width: 100%; }
  @media (min-width: 959px) {
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type,
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col {
      margin-right: 3%;
      width: 45%;
      display: -ms-flexbox;
      display: flex;
      -ms-flex: 1 1 auto;
          flex: 1 1 auto;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
      -ms-flex-pack: justify;
          justify-content: space-between;
      -ms-flex-align: center;
          align-items: center; } }
  .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-left,
  .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-left {
    width: 100%; }
    @media (min-width: 959px) {
      .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-left,
      .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-left {
        width: 45%; } }
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-left .oh-image-model,
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-left .oh-image-model {
      width: 50%;
      display: block;
      margin: 0 auto; }
      @media (min-width: 959px) {
        .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-left .oh-image-model,
        .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-left .oh-image-model {
          width: 100%; } }
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-left .oh-image--services,
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-left .oh-image--services {
      width: 50%; }
      @media (min-width: 959px) {
        .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-left .oh-image--services,
        .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-left .oh-image--services {
          width: 65%; } }
  .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-right,
  .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-right {
    width: 100%; }
    @media (min-width: 959px) {
      .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-right,
      .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-right {
        width: 50%; } }
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type .col-right p,
    .col:nth-last-of-type(n + 2):nth-last-of-type(-n + 2):first-of-type ~ .col .col-right p {
      padding: 0; }
  @media (min-width: 959px) {
    .col:nth-last-of-type(n + 3):nth-last-of-type(-n + 3):first-of-type,
    .col:nth-last-of-type(n + 3):nth-last-of-type(-n + 3):first-of-type ~ .col {
      margin-right: 3%;
      width: 30%; } }
  .col:last-child {
    margin: 0;
    padding: 0; }

.col-image-wrapper {
  margin: 0 auto;
  display: block;
  width: 100%;
  height: 155px; }
  .col-image-wrapper .col-image {
    margin: 0 auto;
    height: 100%;
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    width: 65%; }
    @media (min-width: 767px) {
      .col-image-wrapper .col-image {
        width: 30%; } }
    @media (min-width: 959px) {
      .col-image-wrapper .col-image {
        width: 50%; } }
  @media (max-width: 959px) {
    .col-image-wrapper--how .col-image {
      width: 35%; } }
  .col-image-wrapper--partner {
    height: 225px; }
    @media (min-width: 959px) {
      .col-image-wrapper--partner {
        height: 250px; } }
    .col-image-wrapper--partner .col-image {
      width: 75%; }
      @media (min-width: 959px) {
        .col-image-wrapper--partner .col-image {
          width: 100%; } }

.col-text {
  padding: 0;
  margin: 0;
  width: 100%;
  display: block; }

.section-rows {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 0 3%;
  max-width: 1300px;
  margin: 0 auto; }
  @media (min-width: 959px) {
    .section-rows {
      padding: 0; } }
  .section-rows--five {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    .section-rows--five .section-rows__column {
      margin-bottom: 40px; }
    @media (max-width: 959px) {
      .section-rows--five .section-rows__image-wrapper {
        margin-bottom: 15px; } }
    @media (min-width: 959px) {
      .section-rows--five {
        -ms-flex-wrap: nowrap;
            flex-wrap: nowrap; } }

.section-rows__column {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  width: 100%;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-line-pack: center;
      align-content: center;
  margin-bottom: 15px;
  -ms-flex-align: center;
      align-items: center; }
  @media (min-width: 959px) {
    .section-rows__column {
      width: 45%;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap; } }
  .section-rows--five .section-rows__column {
    -ms-flex-align: start;
        align-items: flex-start; }
    .section-rows--five .section-rows__column p {
      padding: 0;
      margin: 0; }

.section-rows__image-wrapper {
  margin: 0 auto; }
  @media (max-width: 959px) {
    .section-rows__image-wrapper {
      width: 100%; } }

.section-rows__image {
  height: 80px;
  display: block;
  min-width: 80px;
  width: 25%;
  padding-bottom: 15%;
  margin-right: 15px;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center; }
  @media (max-width: 959px) {
    .section-rows__image {
      margin: 0 auto; } }

.icon-grid {
  display: -ms-flexbox;
  display: flex;
  -ms-flex: 1 1 auto;
      flex: 1 1 auto;
  text-align: center;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 0 3%;
  max-width: 1300px;
  margin: 0 auto; }
  @media (min-width: 959px) {
    .icon-grid {
      padding: 0;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
      -ms-flex-pack: justify;
          justify-content: space-between; } }

.icon-col {
  width: 50%;
  margin-bottom: 35px; }
  @media (min-width: 959px) {
    .icon-col {
      width: 14%; } }
  @media (min-width: 959px) {
    .icon-grid--horz .icon-col {
      width: 20%; } }

.icon-col__image {
  height: 60px;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  margin-bottom: 15px; }
  .icon-col__image img {
    width: 100%;
    height: auto; }

.icon-calendar {
  background-size: 60% !important; }
  @media (min-width: 440px) {
    .icon-calendar {
      background-size: 40% !important; } }
  @media (min-width: 959px) {
    .icon-calendar {
      background-size: 60% !important; } }

@media (min-width: 959px) {
  .icon-meds {
    background-size: 80%; } }

@media (min-width: 959px) {
  .icon-doc-patient {
    background-size: 80%; } }

.call-to-action {
  background-color: #53504e;
  color: #ffffff;
  font-size: 20px;
  font-family: "Open Sans Condensed", sans-serif;
  padding: 40px;
  text-align: center;
  position: relative;
  z-index: 1; }
  @media (min-width: 959px) {
    .call-to-action {
      font-size: 38px; } }
  .call-to-action .oh-cta-link {
    color: #ffffff;
    text-decoration: none; }

.call-to-action__button {
  background-color: #ffd067;
  padding: 10px 35px;
  color: #53504e;
  text-transform: uppercase;
  font-size: 19px;
  font-family: "Open Sans", sans-serif;
  font-weight: 700;
  outline: none;
  border: none;
  display: inline-block; }
  @media (max-width: 959px) {
    .call-to-action__button {
      padding: 10px 20px;
      font-size: 18px;
      margin-top: 10px; } }
  .call-to-action__button--medium-teal {
    background-color: #8fd4dd; }

.oh-contact {
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  opacity: 0;
  visibility: hidden; }
  .oh-contact--active {
    opacity: 1;
    visibility: visible; }

.oh-contact__bg {
  width: 100%;
  height: 100%;
  position: fixed;
  z-index: 998;
  transition: all 275ms;
  background-color: rgba(107, 102, 98, 0); }
  .oh-contact--active .oh-contact__bg {
    background-color: rgba(107, 102, 98, 0.9); }

.oh-contact__inner-wrap {
  display: block;
  width: 100%;
  padding: 20px;
  background: #60589d;
  color: #ffffff;
  position: absolute;
  z-index: 999;
  left: 50%;
  transition: all 275ms;
  transform: translateX(-50%) translateY(-50%); }
  @media (min-width: 767px) {
    .oh-contact__inner-wrap {
      width: 80%;
      padding: 40px;
      top: 5%; } }
  @media (min-width: 959px) {
    .oh-contact__inner-wrap {
      width: 50%; } }
  .oh-contact--active .oh-contact__inner-wrap {
    transition: all 275ms;
    transform: translateX(-50%) translateY(0%); }
  .oh-contact__inner-wrap p {
    color: #ffffff; }

.oh-contact__close {
  display: block;
  position: absolute;
  top: 10px;
  right: 10px;
  width: 40px;
  height: 40px; }
  .oh-contact__close:before, .oh-contact__close:after {
    transition: all 275ms;
    content: '';
    background: #ffffff;
    width: 100%;
    height: 3px;
    display: block;
    position: absolute;
    top: 50%; }
  .oh-contact__close:before {
    transform: rotate(45deg); }
  .oh-contact__close:after {
    transform: rotate(-45deg); }
  @media (min-width: 959px) {
    .oh-contact__close:hover {
      cursor: pointer; }
      .oh-contact__close:hover:before, .oh-contact__close:hover:after {
        background-color: #ffd067; } }

.oh-contact__form {
  margin: 10px 0 0; }
  .oh-contact__form button {
    z-index: 9999;
    position: relative; }

.oh-contact__row {
  display: block;
  margin-bottom: 3px; }
  .oh-contact__row--submit {
    margin-top: 20px; }

.oh-contact__input {
  width: 100%;
  padding: 6px 10px; }

.oh-contact__textarea {
  padding: 6px 10px;
  width: 100%; }

.oh-contact__description {
  color: #ffd067;
  padding-left: 20px;
  margin: 6px 0 20px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
